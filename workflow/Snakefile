from snakemake.utils import min_version

min_version("6.10.0")

# Configuration file containing all user-specified settings
configfile: "config/config.yaml"


import os
import csv
import pandas as pd

METADATA=pd.read_csv('resources/metadata/metadata.csv').loc[0:3]
ACCESSIONS=METADATA['sample_id'].tolist() # Specify the column containing the accession, in this demo is Run

# Master rule for controlling workflow.
rule all:
    input:
        expand("resources/reads/trimmed/{accession}_{sraNum}.fastq", accession=ACCESSIONS, sraNum=config["sraNum"]),
        expand("resources/reads/trimmed/decontam/{accession}_{sraNum}.fastq", accession=ACCESSIONS, sraNum=config["sraNum"]),
        "results/qc/seqkit1/seqkit_stats.txt",
        "results/qc/multiqc1/multiqc_report.html", 

        "results/qc/seqkit2/seqkit_stats.txt",
        "results/qc/multiqc2/multiqc_report.html",

        "results/qc/seqkit3/seqkit_stats.txt",
        "results/qc/multiqc3/multiqc_report.html",

        "index.html",


rule import_prepared_data:
	output:
		task="from-imap-part1.txt",
	shell:
		"echo from-imap-part1 > {output}"


# Trimming and decontaminating
rule bbduk_trim_decontam:
    input:
        what=rules.import_prepared_data.output,
        script="workflow/scripts/bbduk_trim_decontam.sh",
    output:
        trim=expand("resources/reads/trimmed/{accession}_{sraNum}.fastq", accession=ACCESSIONS, sraNum=config["sraNum"]),
        decontam=expand("resources/reads/trimmed/decontam/{accession}_{sraNum}.fastq", accession=ACCESSIONS, sraNum=config["sraNum"]),
    shell:
        "bash {input.script}"

# Qcing rawdata
rule qc_raw_trimmed_decontam:
    input:
        raw=rules.import_prepared_data.output,
        trim=rules.bbduk_trim_decontam.output,
        script="workflow/scripts/qc_raw_trimmed_decontam.sh",
    output:
        "results/qc/seqkit1/seqkit_stats.txt",
        "results/qc/multiqc1/multiqc_report.html", 

        "results/qc/seqkit2/seqkit_stats.txt",
        "results/qc/multiqc2/multiqc_report.html",

        "results/qc/seqkit3/seqkit_stats.txt",
        "results/qc/multiqc3/multiqc_report.html",
    threads: 1
    shell:
        "bash {input.script}"

# Get dot rule graphs
rule dot_rulegraph:
	output:
		"dags/rulegraph.svg",
		"dags/rulegraph.png",
	shell:
		"bash workflow/scripts/rules_dag.sh"

# Get project tree
rule project_tree:
    output:
        tree="images/project_tree.txt"
    shell:
        """
        bash workflow/scripts/tree.sh
        """

# Get smk html report
rule snakemake_html_report:
	output:
		"images/smkreport/screenshot.png"
	shell:
		"bash workflow/scripts/smk_html_report.sh"

rule deploy_to_github_pages:
    input:
        script="workflow/scripts/render.R",
        rmd="index.Rmd",
        rulegraph="dags/rulegraph.svg",
        tree="images/project_tree.txt",
        html2png="images/smkreport/screenshot.png",
        qc=rules.qc_raw_trimmed_decontam.output,
    output:
        doc="index.html",
    shell:
        """
        R -e "library(rmarkdown); render('{input.rmd}')"
        """


